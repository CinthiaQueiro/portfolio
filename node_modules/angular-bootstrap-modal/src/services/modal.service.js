/**
*
* TMJ Angular Modal Library
* @author TMJ Engineering.
*
* Created a default approach modal using modal bootstrap
* @copyright TMJ Philippines BPO Services Inc. 2016
*/

'use strict';

Modal.$inject = ['$uibModal', 'BOOTSTRAP_CONFIG', 'MODAL_CONFIG'];

/* @ngInject */
function Modal($uibModal, BOOTSTRAP_CONFIG, MODAL_CONFIG) {
    this.open = open;
    this.checkConfig = checkConfig;

    /**
     * Open the modal
     */
    function open(config) {
        checkConfig(config);

        // DECLARE THE MODEL INSTANCE
        config.controller = config.controller || MODAL_CONFIG.DEFAULT.CONTROLLER;
        // IF NO CONTROLLERAS DEFINED IT WILL BE ALIAS AS DEFAULT AND NEED TO CALL OTHER
        // NON SCOPE FUNCTION LIKE( e.g. default.function_name()/ default.variable)
        config.controllerAs = config.controllerAs || MODAL_CONFIG.DEFAULT.CONTROLLERAS;

        // STATIC VARIABLE HOLDS RESERVE ATTRIBUTE USED BY Bootstrap MODAL
        var staticVar = BOOTSTRAP_CONFIG.RESERVED;

        // WILL HOLD OTHER SPECIFIED ATTRIBUTE NOT DECLARED ABOVE
        var resolveAttr = {};

        // ALL ATTR NOT IN STATIC VAR WILL BE PUT IN RESOLVE
        for (var key in config)
        {
            // IF NOT IN STATIC VAR
            if (staticVar.indexOf(key) < 0)
                resolveAttr[key] = config[key];

        }

        // overwrite resolve
        config.resolve = {
            attr: function() {
                return resolveAttr;
            },
        };

        // OPEN THE MODAL
        var modalInstance = $uibModal.open(config);
        return modalInstance.result;
    }

    function checkConfig(config) {
        if (!config) return console.error(MODAL_CONFIG.ERR_MSG.MISSING);
    }
}

module.exports = Modal;
